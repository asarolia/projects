namespace DML.Generator.Domain
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Xml.Linq;
    using System.Configuration;
    
    /// <summary>
    /// Configuration factory class
    /// </summary>
    public static class ConfigurationFactory
    {

        /// <summary>
        /// Adds the exceed table.
        /// </summary>
        /// <param name="tableName">Name of the table.</param>
        /// <param name="hostDMLName">Name of the host DML.</param>
        /// <param name="feDMLName">Name of the fe DML.</param>
        /// <returns></returns>
        public static string AddExceedTable(string tableName, string hostDMLName, string feDMLName)
        {
            string path = ConfigurationManager.AppSettings.Get("Mapping");
            XDocument doc = XDocument.Load(path);
            
            XElement element = doc.Root.Elements(tableName).FirstOrDefault();

            if (element != null)
            {
                return "Table already exist.";
            }

            element = new XElement(tableName, new XAttribute("HostCB", hostDMLName), new XAttribute("FeDML", feDMLName));
            doc.Root.Add(element);
            doc.Save(path);
            return "Table added successfully.";
        }


        /// <summary>
        /// Adds the exceed scheme.
        /// </summary>
        /// <param name="schemeId">The scheme id.</param>
        /// <returns></returns>
        public static string AddExceedScheme(int schemeId)
        {
            string path = ConfigurationManager.AppSettings.Get("Mapping");
            XDocument doc = XDocument.Load(path);

            List<XElement> element = doc.Root.Elements().Where(x => x.Attribute("grping") != null && x.Attribute("col") != null && string.Equals(x.Attribute("grping").Value, "Y")
                && string.Equals(x.Attribute("col").Value, "SCHEME_ID")).ToList();

            List<XElement> filteredElements = new List<XElement>();
            element.ForEach(
                node=>
                {
                    List<XElement> DMLGrpMap = node.Elements("DML_grp_map")
                        .Where(y => y.Attribute("value") != null && string.Equals(y.Attribute("value").Value, schemeId.ToString())).ToList();
                    if (DMLGrpMap.Count > 0)
                    {
                        filteredElements.Add(node);
                    }
                }
                );

            if (filteredElements.Count > 0)
            {
                return "Scheme already exist.";
            }

            XElement newElement = new XElement("DML_grp_map", new XAttribute("value", schemeId), new XAttribute("HostCB", "SH000" + schemeId));
            
            element.ForEach(node =>
                { 
                    doc.Root.Element(node.Name).Add(newElement);
                });
            
            doc.Save(path);
            return "Table added successfully.";
        }
    }
}
